* Introduction

An ~emacs~ global minor mode that delegates window management to ~i3wm~.

The program uses ~i3-msg~ to communicate with the window manager. It may not be compatible with other window manager (although it is possible to adopt it to other window manager that offers command line control).

Highlight:
- Allowing key bindings to be effective in both ~emacs~ and ~i3~.
- Automatically update i3 config files when turn on the mode. 

* Installation

** Dependencies
- ~xprop~
- ~i3wm~

** Installation

TODO

* Idea

** Using frame in lieu of window

This package overrides ~split-window~ to split frames instead. Some modes/functions like ~transient~ do not play well with switching focus between frames. The customization option ~i3-function-should-split-window~ allows those modes/functions to continue using the original ~split-window~ to do their businesses. If there is another function that you want to split window rather than frame, you can add that function to ~i3-function-should-split-window~.

** Key binding

Window managers intercept key events before it can reach ~emacs~. To circumvent this issue, I use a simple shell script ~i3-call~ to detect whether the focused x-window is an ~emacs~ window or not. If it is an ~emacs~ window, the key event is instead redirected to ~emacs~.

The customization option ~i3-binding~ allows one to add arbitrary key bindings that are effective in both ~emacs~ and ~i3wm~. An example that I use is
#+begin_src emacs-lisp
  (setq i3-bindings 
        '((?\C-l . "focus right")
          (?\C-h . "focus left")
          (?\C-k . "focus up")
          (?\C-j . "focus down")))
#+end_src
which uses ~ctrl+[hjkl]~ to move window focus in ~i3wm~.

* Similar Projects

[[https://github.com/davidshepherd7/frames-only-mode][frames-only-mode]] which changes splitting behavior by setting ~pop-up-frame~ to ~graphic-only~.


* Licenses

MIT
